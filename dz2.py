#!/usr/bin/env python
# coding: utf-8

# In[10]:


### 
# Входные данные
# Вводится целое число, по модулю не превосходящее 10000.
#
# Выходные данные
# Выведите сначала фразу "The next number for the number ", 
# затем введенное число, затем слово " is ", окруженное пробелами, 
# затем формулу для следующего за введенным числа, 
# наконец, знак точки без пробела. Аналогично в следующей строке для предыдущего числа.
###
num=int(input("Введите целое число по модулю не превосходящее 10000: \n"))
while 1: 
    if num > 10000 or num < -10000:
        print("Вы ввели число превосходящее 10000 по модую, повторите ввод: \n")
        num = int(input())
    else:
        break
print("Следующее число за числом " + str(num) + " это " + str(num + 1) + ".")
print("Предыдущее число перед числом " + str(num) + " это " + str(num - 1) + ".")


# In[12]:


###
# Вычислите 2^179. Выведите на экран вычисленное значение.
###
print("\n \n 2^179="+str(2**179))


# In[11]:


###
# Вычислите длину гипотенузы в прямоугольном треугольнике со сторонами 179 и 971.
###
print("\n \n Гипотенуза равна: "+str((179**2 + 971**2)**(1 / 2)))


# In[22]:


###
# Дано два числа a и b. Выведите гипотенузу треугольника с заданными катетами.
#
# Входные данные
# Вводятся два целых положительных числа, не превышающих 1000.
#
# Выходные данные
# Выведите ответ на задачу с точностью 10 знаков после запятой
###
a=int(input("Введите длину первого катета не превосходящее 1000: \n"))
while 1: 
    if a > 1000 or a <=0:
        print("Вы ввели длину первого катета не более 0 или превосходящее 1000, повторите ввод: \n")
        a = int(input())
    else:
        break
b=int(input("Введите длину второго катета не превосходящее 1000: \n"))
while 1: 
    if b > 1000 or b <=0:
        print("Вы ввели длину второго катета не более 0 или превосходящее 1000, повторите ввод: \n")
        b = int(input())
    else:
        break
gip = (a**2 + b**2)**(1 / 2)
print("Гипотенуза равна: {:14.10f}".format(gip))


# In[24]:


###
# Напишите программу, которая приветствует пользователя, выводя слово Hello, 
# введенное имя и знаки препинания по образцу (см. пример входных и выходных данных). 
# Программа должна считывать в строковую переменную значение и писать соответствующее приветствие.
#
# Входные данные
# Вводится строка, длина которой не превышает 100 символов.
#
# Выходные данные
# Выведите ответ на задачу.
###
string = input("Введите ваше имя но не более 100 символов: \n")
while 1: 
    if len(string) > 100:
        print("Вы ввели имя длинее 100 символов, повторите ввод: \n")
        string = input()
    else:
        break
print("Привет, " + string + "!")


# In[32]:


###
# Даны два целых числа. Программа должна вывести число 1, если первое число больше второго,
# число 2, если второе больше первого или число 0, если они равны.
###
x = int(input("Введите первое число: \n"))
y = int(input("Введите второе число: \n"))
if x > y:
    print(x)
elif x < y:
    print(y)
else:
    print(0)


# In[35]:


###
# В математике функция sign(x) (знак числа) определена так:
# sign(x) = 1,   если x > 0,
# sign(x) = -1, если x < 0,
# sign(x) = 0,   если x = 0.
#
# Для данного числа x выведите значение sign(x).
###
x = int(input("Введите целое число: \n"))
if x > 0:
    sign_x = 1
elif x < 0:
    sign_x = -1
else:
    sign_x = 0
print(sign_x)


# In[47]:


###
# Входные данные
# Дана строка.
#
# Выходные данные
# Сначала выведите третий символ этой строки.
#
# Во второй строке выведите предпоследний символ этой строки.
#
# В третьей строке выведите первые пять символов этой строки.
#
# В четвертой строке выведите всю строку, кроме последних двух символов.
#
# В пятой строке выведите все символы с четными индексами (считая, что индексация начинается с 0, поэтому символы выводятся начиная с первого).
#
# В шестой строке выведите все символы с нечетными индексами, то есть начиная со второго символа строки.
#
# В седьмой строке выведите все символы в обратном порядке.
#
# В восьмой строке выведите все символы строки через один в обратном порядке, начиная с последнего.
#
# В девятой строке выведите длину данной строки.
#
###
string = input("Введите строку: \n")
print(string[2])
print(string[len(string)-2])
print(string[0:5])
print(string[0:len(string)-2])
print(string[::2])
print(string[1::2])
print(string[::-1])
print(string[::-2])
print(len(string))


# In[52]:


###
# Дана строка, состоящая из слов, разделенных ровно одним пробелом. 
# Определите, сколько в ней слов. Используйте для решения задачи метод count.
###
string = input("Введите строку: \n")
print(string.count(' ') + 1)


# In[56]:


###
# Считайте со стандартного ввода символ и выведите его код.
###
string = input("Введите символ: \n")
print("Код ASCII: " + str(ord(string)))


# In[58]:


###
# Считайте со стандартного ввода целое число и выведите ASCII-символ с таким кодом.
# Решите эту задачу с использованием только одной переменной типа int.
###
code = int(input("Введите код ASCII: \n"))
print("Символ: " + chr(code))


# In[2]:


###
# Даны две строки, возможно, содержащие пробелы. 
# Выведите слово YES, если первая строка является подстрокой второй строки или слово NO в противном случае.
###
string1=input("Введите первую строку: \n")
string2=input("Введите вторую строку: \n")
if string2.find(string1) > -1:
    print("ДА")
else:
    print("НЕТ")


# In[ ]:




